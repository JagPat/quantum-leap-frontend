{
  "metadata": {
    "timestamp": "2025-09-19T01:28:03.860Z",
    "executionTime": 42899,
    "version": "1.0.0",
    "generator": "OAuth Deployment Verification System"
  },
  "summary": {
    "overallScore": 87,
    "totalTests": 84,
    "totalPassed": 73,
    "totalFailed": 24,
    "successRate": 87,
    "issueCount": {
      "critical": 0,
      "high": 4,
      "medium": 9,
      "low": 0
    }
  },
  "verificationResults": {
    "Database Schema Verification": false,
    "OAuth Endpoint Verification": {
      "success": false,
      "results": {
        "deployment": {
          "healthy": true,
          "info": {
            "appVersion": "2.0.0",
            "uptime": 35280.85959401,
            "timestamp": "2025-09-19T01:27:47.508Z",
            "authModuleLoaded": true,
            "deploymentTimestamp": "2025-09-19T01:27:47.659Z"
          },
          "checksPasssed": 3,
          "totalChecks": 3
        },
        "fixes": {
          "passed": 3,
          "total": 3,
          "allFixed": true
        },
        "userIdHandling": {
          "passed": 1,
          "total": 3,
          "allPassed": false
        },
        "endpoints": {
          "passed": 6,
          "total": 9,
          "allPassed": false
        }
      },
      "metrics": {
        "totalTests": 18,
        "passedTests": 12,
        "failedTests": 6,
        "testResults": [
          {
            "name": "Application Health Check",
            "path": "/health",
            "method": "GET",
            "expectedStatus": 200,
            "actualStatus": 200,
            "responseTime": 72.36920800000007,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "Application is ready"
            },
            "timestamp": "2025-09-19T01:27:28.861Z"
          },
          {
            "name": "Auth Module Debug Endpoint",
            "path": "/api/modules/auth/debug",
            "method": "GET",
            "expectedStatus": 200,
            "actualStatus": 200,
            "responseTime": 73.58399999999983,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "Auth module debug endpoint accessible"
            },
            "timestamp": "2025-09-19T01:27:28.935Z"
          },
          {
            "name": "OAuth Health Check",
            "path": "/api/modules/auth/broker/health",
            "method": "GET",
            "expectedStatus": 200,
            "actualStatus": 200,
            "responseTime": 595.8023750000011,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "OAuth health check passed"
            },
            "timestamp": "2025-09-19T01:27:29.531Z"
          },
          {
            "name": "Valid OAuth Setup Request (Complete)",
            "path": "/api/modules/auth/broker/setup-oauth",
            "method": "POST",
            "expectedStatus": 200,
            "actualStatus": 500,
            "responseTime": 172.22020899999916,
            "success": false,
            "validationResult": null,
            "timestamp": "2025-09-19T01:27:29.704Z"
          },
          {
            "name": "OAuth Setup Without user_id (Auto-generation Test)",
            "path": "/api/modules/auth/broker/setup-oauth",
            "method": "POST",
            "expectedStatus": 200,
            "actualStatus": 400,
            "responseTime": 73.87424999999894,
            "success": false,
            "validationResult": null,
            "timestamp": "2025-09-19T01:27:29.778Z"
          },
          {
            "name": "Invalid OAuth Setup (Missing api_key)",
            "path": "/api/modules/auth/broker/setup-oauth",
            "method": "POST",
            "expectedStatus": 400,
            "actualStatus": 400,
            "responseTime": 73.69162499999948,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "Proper validation error for missing api_key"
            },
            "timestamp": "2025-09-19T01:27:29.852Z"
          },
          {
            "name": "Invalid OAuth Setup (Missing api_secret)",
            "path": "/api/modules/auth/broker/setup-oauth",
            "method": "POST",
            "expectedStatus": 400,
            "actualStatus": 400,
            "responseTime": 73.70012500000121,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "Proper validation error for missing api_secret"
            },
            "timestamp": "2025-09-19T01:27:29.926Z"
          },
          {
            "name": "Invalid OAuth Setup (Empty Payload)",
            "path": "/api/modules/auth/broker/setup-oauth",
            "method": "POST",
            "expectedStatus": 400,
            "actualStatus": 400,
            "responseTime": 73.30629099999896,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "Proper error handling for empty payload"
            },
            "timestamp": "2025-09-19T01:27:30.000Z"
          },
          {
            "name": "OAuth Status Check",
            "path": "/api/modules/auth/broker/status?user_id=comprehensive_test_user",
            "method": "GET",
            "expectedStatus": 200,
            "actualStatus": 500,
            "responseTime": 175.7503340000003,
            "success": false,
            "validationResult": null,
            "timestamp": "2025-09-19T01:27:30.176Z"
          },
          {
            "name": "Application Health Check",
            "path": "/health",
            "method": "GET",
            "expectedStatus": 200,
            "actualStatus": 200,
            "responseTime": 76.49212500000067,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "Application is ready"
            },
            "timestamp": "2025-09-19T01:27:48.843Z"
          },
          {
            "name": "Auth Module Debug Endpoint",
            "path": "/api/modules/auth/debug",
            "method": "GET",
            "expectedStatus": 200,
            "actualStatus": 200,
            "responseTime": 114.8975419999988,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "Auth module debug endpoint accessible"
            },
            "timestamp": "2025-09-19T01:27:48.958Z"
          },
          {
            "name": "OAuth Health Check",
            "path": "/api/modules/auth/broker/health",
            "method": "GET",
            "expectedStatus": 200,
            "actualStatus": 200,
            "responseTime": 530.1629159999975,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "OAuth health check passed"
            },
            "timestamp": "2025-09-19T01:27:49.488Z"
          },
          {
            "name": "Valid OAuth Setup Request (Complete)",
            "path": "/api/modules/auth/broker/setup-oauth",
            "method": "POST",
            "expectedStatus": 200,
            "actualStatus": 500,
            "responseTime": 181.57708400000047,
            "success": false,
            "validationResult": null,
            "timestamp": "2025-09-19T01:27:49.670Z"
          },
          {
            "name": "OAuth Setup Without user_id (Auto-generation Test)",
            "path": "/api/modules/auth/broker/setup-oauth",
            "method": "POST",
            "expectedStatus": 200,
            "actualStatus": 400,
            "responseTime": 76.4767090000023,
            "success": false,
            "validationResult": null,
            "timestamp": "2025-09-19T01:27:49.747Z"
          },
          {
            "name": "Invalid OAuth Setup (Missing api_key)",
            "path": "/api/modules/auth/broker/setup-oauth",
            "method": "POST",
            "expectedStatus": 400,
            "actualStatus": 400,
            "responseTime": 75.69633299999987,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "Proper validation error for missing api_key"
            },
            "timestamp": "2025-09-19T01:27:49.823Z"
          },
          {
            "name": "Invalid OAuth Setup (Missing api_secret)",
            "path": "/api/modules/auth/broker/setup-oauth",
            "method": "POST",
            "expectedStatus": 400,
            "actualStatus": 400,
            "responseTime": 77.03708299999926,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "Proper validation error for missing api_secret"
            },
            "timestamp": "2025-09-19T01:27:49.900Z"
          },
          {
            "name": "Invalid OAuth Setup (Empty Payload)",
            "path": "/api/modules/auth/broker/setup-oauth",
            "method": "POST",
            "expectedStatus": 400,
            "actualStatus": 400,
            "responseTime": 110.04300000000148,
            "success": true,
            "validationResult": {
              "valid": true,
              "message": "Proper error handling for empty payload"
            },
            "timestamp": "2025-09-19T01:27:50.011Z"
          },
          {
            "name": "OAuth Status Check",
            "path": "/api/modules/auth/broker/status?user_id=comprehensive_test_user",
            "method": "GET",
            "expectedStatus": 200,
            "actualStatus": 500,
            "responseTime": 197.34591699999874,
            "success": false,
            "validationResult": null,
            "timestamp": "2025-09-19T01:27:50.208Z"
          }
        ],
        "startTime": 15.946333,
        "deploymentInfo": {
          "appVersion": "2.0.0",
          "uptime": 35280.85959401,
          "timestamp": "2025-09-19T01:27:47.508Z",
          "authModuleLoaded": true,
          "deploymentTimestamp": "2025-09-19T01:27:47.659Z"
        }
      }
    },
    "Production Health Monitoring": {
      "healthy": true,
      "results": {
        "setupOAuth": {
          "endpoint": "/api/modules/auth/broker/setup-oauth",
          "passed": 3,
          "total": 3,
          "healthy": true,
          "results": [
            {
              "name": "Endpoint Availability (404 Check)",
              "success": true,
              "details": {
                "status": 400,
                "available": true,
                "responseTime": 76.16779099999985,
                "timestamp": "2025-09-19T01:27:50.285Z"
              },
              "responseTime": 76.16779099999985
            },
            {
              "name": "Valid Request Processing",
              "success": "Database connection not initialized",
              "details": {
                "status": 500,
                "validProcessing": "Database connection not initialized",
                "response": {
                  "success": false,
                  "error": "Failed to setup OAuth",
                  "message": "Database connection not initialized"
                },
                "responseTime": 251.23404200000004,
                "timestamp": "2025-09-19T01:27:50.536Z"
              },
              "responseTime": 251.23404200000004
            },
            {
              "name": "Invalid Request Data Detection",
              "success": true,
              "details": {
                "status": 400,
                "properErrorHandling": true,
                "errorMessage": "Invalid request data",
                "responseTime": 77.66487500000221,
                "timestamp": "2025-09-19T01:27:50.614Z"
              },
              "responseTime": 77.66487500000221
            }
          ]
        },
        "brokerHealth": {
          "endpoint": "/api/modules/auth/broker/health",
          "passed": 3,
          "total": 3,
          "healthy": true,
          "results": [
            {
              "name": "Endpoint Availability",
              "success": true,
              "details": {
                "status": 200,
                "available": true,
                "responseTime": 577.8511670000007,
                "timestamp": "2025-09-19T01:27:51.192Z"
              },
              "responseTime": 577.8511670000007
            },
            {
              "name": "Successful Health Status",
              "success": true,
              "details": {
                "status": 200,
                "successField": true,
                "healthData": {
                  "status": "healthy",
                  "brokerService": "operational",
                  "components": {
                    "brokerConfigs": {
                      "status": "error",
                      "error": "Database connection not initialized",
                      "timestamp": "2025-09-19T01:27:51.632Z"
                    },
                    "tokenManager": {
                      "status": "healthy",
                      "tokenManager": "operational",
                      "components": {
                        "oauthTokens": {
                          "status": "error",
                          "error": "Database connection not initialized",
                          "timestamp": "2025-09-19T01:27:51.632Z"
                        },
                        "brokerConfigs": {
                          "status": "error",
                          "error": "Database connection not initialized",
                          "timestamp": "2025-09-19T01:27:51.632Z"
                        },
                        "kiteClient": {
                          "status": "healthy",
                          "kiteApiReachable": true,
                          "statusCode": 429,
                          "timestamp": "2025-09-19T01:27:51.663Z"
                        }
                      },
                      "refreshJob": "running",
                      "timestamp": "2025-09-19T01:27:51.663Z"
                    },
                    "kiteClient": {
                      "status": "healthy",
                      "kiteApiReachable": true,
                      "statusCode": 429,
                      "timestamp": "2025-09-19T01:27:51.686Z"
                    }
                  },
                  "monitoring": "active",
                  "timestamp": "2025-09-19T01:27:51.686Z"
                },
                "responseTime": 503.03166599999895,
                "timestamp": "2025-09-19T01:27:51.696Z"
              },
              "responseTime": 503.03166599999895
            },
            {
              "name": "Response Format Validation",
              "success": true,
              "details": {
                "status": 200,
                "validFormat": true,
                "hasSuccessField": true,
                "hasDataField": true,
                "responseTime": 504.04283300000316,
                "timestamp": "2025-09-19T01:27:52.200Z"
              },
              "responseTime": 504.04283300000316
            }
          ]
        },
        "statusFormats": {
          "passed": 4,
          "total": 4,
          "healthy": true,
          "results": [
            {
              "name": "Application Health Status",
              "success": true,
              "details": {
                "endpoint": "/health",
                "expectedStatus": 200,
                "actualStatus": 200,
                "statusCorrect": true,
                "formatValid": true,
                "responseTime": 78.69241699999839,
                "timestamp": "2025-09-19T01:27:52.279Z"
              },
              "responseTime": 78.69241699999839
            },
            {
              "name": "Auth Module Debug Status",
              "success": true,
              "details": {
                "endpoint": "/api/modules/auth/debug",
                "expectedStatus": 200,
                "actualStatus": 200,
                "statusCorrect": true,
                "formatValid": true,
                "responseTime": 75.73704200000066,
                "timestamp": "2025-09-19T01:27:52.355Z"
              },
              "responseTime": 75.73704200000066
            },
            {
              "name": "OAuth Health Status",
              "success": true,
              "details": {
                "endpoint": "/api/modules/auth/broker/health",
                "expectedStatus": 200,
                "actualStatus": 200,
                "statusCorrect": true,
                "formatValid": true,
                "responseTime": 557.1280420000003,
                "timestamp": "2025-09-19T01:27:52.912Z"
              },
              "responseTime": 557.1280420000003
            },
            {
              "name": "OAuth Setup Bad Request Status",
              "success": true,
              "details": {
                "endpoint": "/api/modules/auth/broker/setup-oauth",
                "expectedStatus": 400,
                "actualStatus": 400,
                "statusCorrect": true,
                "formatValid": true,
                "responseTime": 76.07429200000115,
                "timestamp": "2025-09-19T01:27:52.989Z"
              },
              "responseTime": 76.07429200000115
            }
          ]
        },
        "errorAnalysis": {
          "passed": 3,
          "total": 3,
          "healthy": true,
          "results": [
            {
              "name": "Invalid Request Data Error Detection",
              "success": true,
              "details": {
                "hasInvalidRequestDataError": true,
                "status": 400,
                "errorMessage": "Invalid request data",
                "responseTime": 77.21129199999996
              }
            },
            {
              "name": "Missing Required Fields Error",
              "success": true,
              "details": {
                "hasProperValidationError": true,
                "status": 400,
                "errorMessage": "Invalid request data",
                "details": "\"api_key\" is required",
                "responseTime": 92.45158300000185
              }
            },
            {
              "name": "Database Connection Error Handling",
              "success": true,
              "details": {
                "hasProperDbErrorHandling": "Database connection not initialized",
                "status": 500,
                "errorMessage": "Failed to setup OAuth",
                "responseTime": 208.78645799999867
              }
            }
          ]
        }
      },
      "metrics": {
        "totalChecks": 13,
        "successfulChecks": 13,
        "failedChecks": 0,
        "endpointStatus": {
          "setupOAuth": true,
          "brokerHealth": true,
          "statusFormats": true,
          "errorHandling": true
        },
        "responseTimeHistory": [
          206.06125630769216,
          213.66339746153886
        ],
        "errorHistory": [],
        "startTime": 16.672916,
        "lastCheckTime": "2025-09-19T01:27:50.209Z"
      },
      "summary": {
        "totalTests": 13,
        "totalPassed": 13,
        "healthScore": 100,
        "avgResponseTime": 214,
        "executionTime": 32411
      }
    },
    "End-to-End OAuth Verification": {
      "success": false,
      "results": {
        "frontend": {
          "phase": "Frontend Loading",
          "passed": 0,
          "total": 2,
          "healthy": false,
          "results": [
            {
              "name": "Frontend Accessibility",
              "success": false,
              "details": {
                "status": 404,
                "accessible": false,
                "contentType": "application/json",
                "responseTime": 698.8277500000004,
                "timestamp": "2025-09-19T01:27:54.068Z"
              },
              "responseTime": 698.8277500000004
            },
            {
              "name": "Broker Setup Interface Detection",
              "success": false,
              "details": {
                "status": 404,
                "hasSetupInterface": false,
                "contentLength": 0,
                "responseTime": 141.68370899999718,
                "timestamp": "2025-09-19T01:27:54.210Z"
              },
              "responseTime": 141.68370899999718
            }
          ]
        },
        "oauth": {
          "phase": "OAuth URL Generation",
          "passed": 0,
          "total": 2,
          "healthy": false,
          "results": [
            {
              "name": "Valid OAuth URL Generation",
              "success": false,
              "details": {
                "status": 500,
                "hasOAuthURL": false,
                "responseTime": 190.01400000000285,
                "timestamp": "2025-09-19T01:27:54.401Z"
              },
              "responseTime": 190.01400000000285
            },
            {
              "name": "OAuth URL Structure Validation",
              "success": false,
              "details": {
                "error": "No OAuth URL available from previous test",
                "responseTime": 0
              },
              "responseTime": 0
            }
          ]
        },
        "state": {
          "phase": "CSRF State Storage",
          "passed": 0,
          "total": 2,
          "healthy": false,
          "results": [
            {
              "name": "OAuth State Generation and Storage",
              "success": false,
              "details": {
                "error": "No OAuth state or user ID available from previous test",
                "responseTime": 0
              },
              "responseTime": 0
            },
            {
              "name": "State Parameter Validation",
              "success": false,
              "details": {
                "error": "No OAuth state available from previous test",
                "responseTime": 0
              },
              "responseTime": 0
            }
          ]
        },
        "callback": {
          "phase": "OAuth Callback Handling",
          "passed": 0,
          "total": 2,
          "healthy": false,
          "results": [
            {
              "name": "Callback Endpoint Availability",
              "success": false,
              "details": {
                "status": 404,
                "available": false,
                "response": {
                  "error": "Route not found",
                  "path": "/api/modules/auth/broker/callback?request_token=test&state=test",
                  "server": "modular",
                  "port": "8080"
                },
                "responseTime": 75.64166600000317,
                "timestamp": "2025-09-19T01:27:54.477Z"
              },
              "responseTime": 75.64166600000317
            },
            {
              "name": "Connection Status Update Capability",
              "success": false,
              "details": {
                "error": "No user ID available from previous test",
                "responseTime": 0
              },
              "responseTime": 0
            }
          ]
        }
      },
      "metrics": {
        "totalTests": 8,
        "passedTests": 0,
        "failedTests": 8,
        "testResults": [
          {
            "phase": "Frontend Loading",
            "name": "Frontend Accessibility",
            "success": false,
            "details": {
              "status": 404,
              "accessible": false,
              "contentType": "application/json",
              "responseTime": 698.8277500000004,
              "timestamp": "2025-09-19T01:27:54.068Z"
            },
            "responseTime": 698.8277500000004
          },
          {
            "phase": "Frontend Loading",
            "name": "Broker Setup Interface Detection",
            "success": false,
            "details": {
              "status": 404,
              "hasSetupInterface": false,
              "contentLength": 0,
              "responseTime": 141.68370899999718,
              "timestamp": "2025-09-19T01:27:54.210Z"
            },
            "responseTime": 141.68370899999718
          },
          {
            "phase": "OAuth URL Generation",
            "name": "Valid OAuth URL Generation",
            "success": false,
            "details": {
              "status": 500,
              "hasOAuthURL": false,
              "responseTime": 190.01400000000285,
              "timestamp": "2025-09-19T01:27:54.401Z"
            },
            "responseTime": 190.01400000000285
          },
          {
            "phase": "OAuth URL Generation",
            "name": "OAuth URL Structure Validation",
            "success": false,
            "details": {
              "error": "No OAuth URL available from previous test",
              "responseTime": 0
            },
            "responseTime": 0
          },
          {
            "phase": "CSRF State Storage",
            "name": "OAuth State Generation and Storage",
            "success": false,
            "details": {
              "error": "No OAuth state or user ID available from previous test",
              "responseTime": 0
            },
            "responseTime": 0
          },
          {
            "phase": "CSRF State Storage",
            "name": "State Parameter Validation",
            "success": false,
            "details": {
              "error": "No OAuth state available from previous test",
              "responseTime": 0
            },
            "responseTime": 0
          },
          {
            "phase": "OAuth Callback Handling",
            "name": "Callback Endpoint Availability",
            "success": false,
            "details": {
              "status": 404,
              "available": false,
              "response": {
                "error": "Route not found",
                "path": "/api/modules/auth/broker/callback?request_token=test&state=test",
                "server": "modular",
                "port": "8080"
              },
              "responseTime": 75.64166600000317,
              "timestamp": "2025-09-19T01:27:54.477Z"
            },
            "responseTime": 75.64166600000317
          },
          {
            "phase": "OAuth Callback Handling",
            "name": "Connection Status Update Capability",
            "success": false,
            "details": {
              "error": "No user ID available from previous test",
              "responseTime": 0
            },
            "responseTime": 0
          }
        ],
        "startTime": 17.179541,
        "oauthFlowData": null
      },
      "summary": {
        "totalTests": 8,
        "totalPassed": 0,
        "successRate": 0,
        "avgResponseTime": 138,
        "executionTime": 33520,
        "phasesPasssed": 0,
        "totalPhases": 4
      }
    },
    "Error Handling Verification": {
      "success": false,
      "results": {
        "credentials": {
          "phase": "Invalid Credential Handling",
          "passed": 3,
          "total": 4,
          "healthy": false,
          "results": [
            {
              "name": "Missing API Key Validation",
              "success": true,
              "details": {
                "status": 400,
                "hasValidationError": true,
                "hasApiKeyError": true,
                "isClearMessage": true,
                "errorMessage": "Invalid request data",
                "errorDetails": "\"api_key\" is required",
                "responseTime": 76.04437500000495
              },
              "responseTime": 76.04437500000495
            },
            {
              "name": "Missing API Secret Validation",
              "success": false,
              "details": {
                "status": 400,
                "hasValidationError": true,
                "hasApiSecretError": false,
                "isClearMessage": true,
                "errorMessage": "Invalid request data",
                "errorDetails": "\"api_key\" length must be at least 10 characters long",
                "responseTime": 76.70920900000056
              },
              "responseTime": 76.70920900000056
            },
            {
              "name": "Invalid Data Format Validation",
              "success": true,
              "details": {
                "status": 400,
                "hasValidationError": true,
                "hasProperValidation": true,
                "isClearMessage": true,
                "errorMessage": "Invalid request data",
                "errorDetails": "\"api_key\" is not allowed to be empty",
                "responseTime": 102.50837499999761
              },
              "responseTime": 102.50837499999761
            },
            {
              "name": "Malformed JSON Handling",
              "success": "Internal server error",
              "details": {
                "status": 500,
                "hasErrorHandling": true,
                "hasProperErrorMessage": "Internal server error",
                "errorMessage": "Internal server error",
                "responseTime": 100
              },
              "responseTime": 100
            }
          ]
        },
        "database": {
          "phase": "Database Connection Failure Handling",
          "passed": 3,
          "total": 3,
          "healthy": true,
          "results": [
            {
              "name": "Database Connection Error Response",
              "success": true,
              "details": {
                "status": 500,
                "hasProperErrorHandling": true,
                "hasUserFriendlyMessage": true,
                "doesNotExposeSensitiveInfo": true,
                "errorMessage": "Failed to setup OAuth",
                "message": "Database connection not initialized",
                "responseTime": 196.1244580000057
              },
              "responseTime": 196.1244580000057
            },
            {
              "name": "Database Health Check Error Handling",
              "success": true,
              "details": {
                "status": 200,
                "hasHealthResponse": true,
                "hasDbStatusInfo": true,
                "handlesDbErrors": true,
                "dbErrorsDetected": true,
                "responseTime": 499.68641700000444
              },
              "responseTime": 499.68641700000444
            },
            {
              "name": "Status Check Database Error Handling",
              "success": true,
              "details": {
                "status": 500,
                "hasErrorResponse": true,
                "hasProperErrorMessage": true,
                "doesNotExposeSensitiveInfo": true,
                "errorMessage": "Failed to check status",
                "responseTime": 266.3934999999983
              },
              "responseTime": 266.3934999999983
            }
          ]
        },
        "oauth": {
          "phase": "OAuth Authorization Failure Handling",
          "passed": 2,
          "total": 3,
          "healthy": false,
          "results": [
            {
              "name": "Invalid OAuth Credentials Handling",
              "success": true,
              "details": {
                "status": 500,
                "hasProperErrorHandling": true,
                "hasUserFriendlyMessage": "Failed to setup OAuth",
                "doesNotExposeSecrets": true,
                "errorMessage": "Failed to setup OAuth",
                "message": "Database connection not initialized",
                "responseTime": 170.72116699999606
              },
              "responseTime": 170.72116699999606
            },
            {
              "name": "OAuth State Validation Error Handling",
              "success": true,
              "details": {
                "status": 404,
                "hasErrorResponse": true,
                "hasProperErrorMessage": true,
                "errorMessage": "Route not found",
                "responseTime": 85.97741700000188
              },
              "responseTime": 85.97741700000188
            },
            {
              "name": "OAuth Flow Interruption Handling",
              "success": false,
              "details": {
                "status": 500,
                "hasProperResponse": false,
                "hasUserFriendlyMessage": "Failed to check status",
                "doesNotExposeInternalDetails": true,
                "errorMessage": "Failed to check status",
                "responseTime": 173.93633299999783
              },
              "responseTime": 173.93633299999783
            }
          ]
        },
        "network": {
          "phase": "Network Issue and Timeout Handling",
          "passed": 4,
          "total": 4,
          "healthy": true,
          "results": [
            {
              "name": "Request Timeout Handling",
              "success": true,
              "details": {
                "isTimeoutError": true,
                "errorCode": "TIMEOUT",
                "errorMessage": "Request timeout",
                "responseTime": 101.72029099999781,
                "message": "Timeout properly handled"
              },
              "responseTime": 101.72029099999781
            },
            {
              "name": "Large Payload Handling",
              "success": "Invalid request data",
              "details": {
                "status": 400,
                "hasProperHandling": true,
                "hasErrorMessage": "Invalid request data",
                "errorMessage": "Invalid request data",
                "payloadSize": 10087,
                "responseTime": 369.07704199999716
              },
              "responseTime": 369.07704199999716
            },
            {
              "name": "Concurrent Request Handling",
              "success": true,
              "details": {
                "allSuccessful": true,
                "concurrentRequests": 5,
                "avgResponseTime": 2054,
                "maxResponseTime": 2082,
                "responseTimes": [
                  2031,
                  2061,
                  2028,
                  2070,
                  2082
                ],
                "message": "Concurrent requests handled successfully"
              },
              "responseTime": 2054.2913834000005
            },
            {
              "name": "Retry Mechanism Verification",
              "success": true,
              "details": {
                "bothResponded": 500,
                "reasonableTime": true,
                "consistentBehavior": true,
                "totalTime": 369,
                "response1Status": 500,
                "response2Status": 500,
                "message": "Retry mechanism working"
              },
              "responseTime": 184.70033350000085
            }
          ]
        }
      },
      "metrics": {
        "totalTests": 28,
        "passedTests": 24,
        "failedTests": 4,
        "testResults": [],
        "startTime": 18.476375,
        "errorPatterns": {
          "validationErrors": [
            {
              "test": "Missing API Key Validation",
              "errorMessage": "Invalid request data",
              "status": 400
            },
            {
              "test": "Invalid Data Format Validation",
              "errorMessage": "Invalid request data",
              "status": 400
            },
            {
              "test": "Malformed JSON Handling",
              "errorMessage": "Internal server error",
              "status": 500
            },
            {
              "test": "Missing API Key Validation",
              "errorMessage": "Invalid request data",
              "status": 400
            },
            {
              "test": "Invalid Data Format Validation",
              "errorMessage": "Invalid request data",
              "status": 400
            },
            {
              "test": "Malformed JSON Handling",
              "errorMessage": "Internal server error",
              "status": 500
            }
          ],
          "databaseErrors": [
            {
              "test": "Database Connection Error Response",
              "errorMessage": "Failed to setup OAuth",
              "status": 500
            },
            {
              "test": "Database Health Check Error Handling",
              "status": 200
            },
            {
              "test": "Status Check Database Error Handling",
              "errorMessage": "Failed to check status",
              "status": 500
            },
            {
              "test": "Database Connection Error Response",
              "errorMessage": "Failed to setup OAuth",
              "status": 500
            },
            {
              "test": "Database Health Check Error Handling",
              "status": 200
            },
            {
              "test": "Status Check Database Error Handling",
              "errorMessage": "Failed to check status",
              "status": 500
            }
          ],
          "oauthErrors": [
            {
              "test": "Invalid OAuth Credentials Handling",
              "errorMessage": "Failed to setup OAuth",
              "status": 500
            },
            {
              "test": "OAuth State Validation Error Handling",
              "errorMessage": "Route not found",
              "status": 404
            },
            {
              "test": "Invalid OAuth Credentials Handling",
              "errorMessage": "Failed to setup OAuth",
              "status": 500
            },
            {
              "test": "OAuth State Validation Error Handling",
              "errorMessage": "Route not found",
              "status": 404
            }
          ],
          "networkErrors": [
            {
              "test": "Request Timeout Handling",
              "message": "Timeout properly handled",
              "responseTime": 100.85020799999984
            },
            {
              "test": "Large Payload Handling",
              "responseTime": 368.84662500000013
            },
            {
              "test": "Concurrent Request Handling",
              "message": "Concurrent requests handled successfully",
              "responseTime": 2105.090325
            },
            {
              "test": "Retry Mechanism Verification",
              "message": "Retry mechanism working",
              "responseTime": 174.49543749999975
            },
            {
              "test": "Request Timeout Handling",
              "message": "Timeout properly handled",
              "responseTime": 101.72029099999781
            },
            {
              "test": "Large Payload Handling",
              "responseTime": 369.07704199999716
            },
            {
              "test": "Concurrent Request Handling",
              "message": "Concurrent requests handled successfully",
              "responseTime": 2054.2913834000005
            },
            {
              "test": "Retry Mechanism Verification",
              "message": "Retry mechanism working",
              "responseTime": 184.70033350000085
            }
          ]
        }
      },
      "summary": {
        "totalTests": 28,
        "totalPassed": 24,
        "successRate": 86,
        "avgResponseTime": 0,
        "executionTime": 38180,
        "phasesPasssed": 2,
        "totalPhases": 4
      }
    },
    "Security Verification": {
      "secure": false,
      "results": {
        "encryption": {
          "phase": "Credential Encryption Verification",
          "passed": 4,
          "total": 4,
          "healthy": true,
          "results": [
            {
              "name": "Sensitive Data Not Exposed in Responses",
              "success": true,
              "details": {
                "status": 500,
                "exposesApiKey": false,
                "exposesApiSecret": false,
                "exposesCredentials": false,
                "responseContainsCredentials": "NO - SECURE",
                "responseTime": 184.84587499999907
              },
              "responseTime": 184.84587499999907
            },
            {
              "name": "Error Messages Do Not Expose Credentials",
              "success": true,
              "details": {
                "status": 500,
                "exposesApiKey": false,
                "exposesApiSecret": false,
                "exposesCredentials": false,
                "errorResponseSecure": true,
                "responseTime": 187.1050830000022
              },
              "responseTime": 187.1050830000022
            },
            {
              "name": "Database Connection Strings Not Exposed",
              "success": true,
              "details": {
                "status": 200,
                "exposesDbUrl": false,
                "exposesDbPassword": false,
                "exposesDbCredentials": false,
                "healthResponseSecure": true,
                "responseTime": 533.2104580000014
              },
              "responseTime": 533.2104580000014
            },
            {
              "name": "Internal System Details Not Exposed",
              "success": true,
              "details": {
                "status": 200,
                "exposesFilePaths": false,
                "exposesEnvVars": false,
                "exposesInternalDetails": false,
                "debugResponseSecure": true,
                "responseTime": 85.48866599999747
              },
              "responseTime": 85.48866599999747
            }
          ]
        },
        "tokenSecurity": {
          "phase": "OAuth Token Security Validation",
          "passed": 2,
          "total": 4,
          "healthy": false,
          "results": [
            {
              "name": "OAuth State Parameter Generation",
              "details": {
                "status": 500,
                "stateLength": 0,
                "isSecureLength": false,
                "stateValue": "none",
                "responseTime": 188.90474999999424
              },
              "responseTime": 188.90474999999424
            },
            {
              "name": "OAuth URL Security Parameters",
              "details": {
                "status": 500,
                "hasState": false,
                "hasResponseType": false,
                "hasRedirectUri": false,
                "isHttps": false,
                "responseTime": 185.63595900000655
              },
              "responseTime": 185.63595900000655
            },
            {
              "name": "Token Storage Security",
              "success": true,
              "details": {
                "status": 500,
                "exposesAccessToken": false,
                "exposesRefreshToken": false,
                "exposesTokens": false,
                "tokenStorageSecure": true,
                "responseTime": 180.75433400000475
              },
              "responseTime": 180.75433400000475
            },
            {
              "name": "Secure Transmission Verification",
              "success": true,
              "details": {
                "allHttps": true,
                "hasSecurityHeaders": true,
                "endpointChecks": [
                  {
                    "endpoint": "/api/modules/auth/broker/setup-oauth",
                    "isHttps": true,
                    "hasSecureHeaders": true,
                    "status": 404
                  },
                  {
                    "endpoint": "/api/modules/auth/broker/health",
                    "isHttps": true,
                    "hasSecureHeaders": true,
                    "status": 200
                  },
                  {
                    "endpoint": "/api/modules/auth/broker/status",
                    "isHttps": true,
                    "hasSecureHeaders": true,
                    "status": 400
                  }
                ],
                "secureTransmission": true,
                "responseTime": 0
              },
              "responseTime": 0
            }
          ]
        },
        "csrf": {
          "phase": "CSRF Protection Verification",
          "passed": 2,
          "total": 3,
          "healthy": false,
          "results": [
            {
              "name": "OAuth State Parameter Validation",
              "success": "Route not found",
              "details": {
                "status": 404,
                "rejectsInvalidState": true,
                "hasErrorMessage": "Route not found",
                "properCSRFProtection": "Route not found",
                "errorMessage": "Route not found",
                "responseTime": 85.16383400000632
              },
              "responseTime": 85.16383400000632
            },
            {
              "name": "State Parameter Uniqueness",
              "success": false,
              "details": {
                "statesGenerated": 0,
                "uniqueStates": 0,
                "allUnique": false,
                "stateUniqueness": "INSECURE",
                "responseTime": 0
              },
              "responseTime": 0
            },
            {
              "name": "Cross-Site Request Forgery Prevention",
              "success": "Failed to setup OAuth",
              "details": {
                "status": 500,
                "hasCSRFProtection": "Failed to setup OAuth",
                "csrfProtectionLevel": "PROTECTED",
                "responseTime": 100
              },
              "responseTime": 100
            }
          ]
        },
        "https": {
          "phase": "HTTPS and Security Headers Verification",
          "passed": 4,
          "total": 4,
          "healthy": true,
          "results": [
            {
              "name": "HTTPS Enforcement",
              "success": true,
              "details": {
                "baseUrlHttps": true,
                "healthEndpointAccessible": true,
                "httpsEnforced": true,
                "responseTime": 158.51512499999808
              },
              "responseTime": 158.51512499999808
            },
            {
              "name": "Security Headers Verification",
              "success": true,
              "details": {
                "status": 200,
                "hasStrictTransportSecurity": true,
                "hasXFrameOptions": true,
                "hasXContentTypeOptions": true,
                "hasXXSSProtection": true,
                "hasContentSecurityPolicy": true,
                "hasReferrerPolicy": true,
                "securityHeaderCount": 6,
                "hasBasicSecurity": true,
                "allHeaders": [
                  "access-control-allow-credentials",
                  "content-length",
                  "content-security-policy",
                  "content-type",
                  "cross-origin-opener-policy",
                  "cross-origin-resource-policy",
                  "date",
                  "etag",
                  "origin-agent-cluster",
                  "referrer-policy",
                  "server",
                  "strict-transport-security",
                  "vary",
                  "x-content-type-options",
                  "x-dns-prefetch-control",
                  "x-download-options",
                  "x-frame-options",
                  "x-permitted-cross-domain-policies",
                  "x-railway-edge",
                  "x-railway-request-id",
                  "x-request-id",
                  "x-xss-protection"
                ],
                "responseTime": 590.525916999999
              },
              "responseTime": 590.525916999999
            },
            {
              "name": "Content Type Security",
              "success": true,
              "details": {
                "status": 200,
                "contentType": "application/json; charset=utf-8",
                "isJsonContentType": true,
                "hasCharset": true,
                "properContentType": true,
                "responseTime": 577.0466249999954
              },
              "responseTime": 577.0466249999954
            },
            {
              "name": "TLS/SSL Configuration",
              "success": true,
              "details": {
                "httpsWorking": true,
                "tlsSecure": true,
                "baseUrl": "https://web-production-de0bc.up.railway.app",
                "connectionSecure": true,
                "responseTime": 85.38883400000486
              },
              "responseTime": 85.38883400000486
            }
          ]
        }
      },
      "metrics": {
        "totalTests": 30,
        "passedTests": 24,
        "failedTests": 6,
        "testResults": [],
        "startTime": 19.54425,
        "securityFindings": {
          "encryptionIssues": [],
          "tokenSecurityIssues": [
            {
              "test": "OAuth State Parameter Generation",
              "issue": {
                "status": 500,
                "stateLength": 0,
                "isSecureLength": false,
                "stateValue": "none",
                "responseTime": 168.52658299999894
              },
              "severity": "HIGH"
            },
            {
              "test": "OAuth URL Security Parameters",
              "issue": {
                "status": 500,
                "hasState": false,
                "hasResponseType": false,
                "hasRedirectUri": false,
                "isHttps": false,
                "responseTime": 166.53079199999775
              },
              "severity": "HIGH"
            },
            {
              "test": "OAuth State Parameter Generation",
              "issue": {
                "status": 500,
                "stateLength": 0,
                "isSecureLength": false,
                "stateValue": "none",
                "responseTime": 188.90474999999424
              },
              "severity": "HIGH"
            },
            {
              "test": "OAuth URL Security Parameters",
              "issue": {
                "status": 500,
                "hasState": false,
                "hasResponseType": false,
                "hasRedirectUri": false,
                "isHttps": false,
                "responseTime": 185.63595900000655
              },
              "severity": "HIGH"
            }
          ],
          "csrfIssues": [
            {
              "test": "State Parameter Uniqueness",
              "issue": {
                "statesGenerated": 0,
                "uniqueStates": 0,
                "allUnique": false,
                "stateUniqueness": "INSECURE",
                "responseTime": 0
              },
              "severity": "HIGH"
            },
            {
              "test": "State Parameter Uniqueness",
              "issue": {
                "statesGenerated": 0,
                "uniqueStates": 0,
                "allUnique": false,
                "stateUniqueness": "INSECURE",
                "responseTime": 0
              },
              "severity": "HIGH"
            }
          ],
          "httpsIssues": []
        }
      },
      "summary": {
        "totalTests": 30,
        "totalPassed": 24,
        "securityScore": 80,
        "avgResponseTime": 0,
        "executionTime": 42896,
        "securePhases": 2,
        "totalPhases": 4,
        "securityIssues": 6
      }
    }
  },
  "issues": {
    "critical": [],
    "high": [
      {
        "id": "end-to-end_oauth_verification_-_frontend_1758245274478_3ulh7",
        "phase": "End-to-End OAuth Verification - frontend",
        "test": "Broker Setup Interface Detection",
        "status": "FAIL",
        "severity": "HIGH",
        "category": "OAUTH",
        "description": "OAuth URL generation or setup issues",
        "recommendation": "Fix database connection to enable OAuth URL generation",
        "impact": "Users cannot initiate broker connections",
        "effort": "HIGH",
        "timestamp": "2025-09-19T01:27:54.478Z"
      },
      {
        "id": "end-to-end_oauth_verification_-_oauth_1758245274478_jgm20",
        "phase": "End-to-End OAuth Verification - oauth",
        "test": "Valid OAuth URL Generation",
        "status": "FAIL",
        "severity": "HIGH",
        "category": "OAUTH",
        "description": "OAuth URL generation or setup issues",
        "recommendation": "Fix database connection to enable OAuth URL generation",
        "impact": "Users cannot initiate broker connections",
        "effort": "HIGH",
        "timestamp": "2025-09-19T01:27:54.478Z"
      },
      {
        "id": "security_verification_-_tokensecurity_1758245283857_4om8k",
        "phase": "Security Verification - tokenSecurity",
        "test": "OAuth State Parameter Generation",
        "status": "FAIL",
        "severity": "HIGH",
        "category": "SECURITY",
        "description": "CSRF protection or state validation issues",
        "recommendation": "Implement proper OAuth state parameter validation",
        "impact": "Vulnerability to CSRF attacks",
        "effort": "MEDIUM",
        "timestamp": "2025-09-19T01:28:03.857Z"
      },
      {
        "id": "security_verification_-_csrf_1758245283857_2re49",
        "phase": "Security Verification - csrf",
        "test": "State Parameter Uniqueness",
        "status": "FAIL",
        "severity": "HIGH",
        "category": "SECURITY",
        "description": "CSRF protection or state validation issues",
        "recommendation": "Implement proper OAuth state parameter validation",
        "impact": "Vulnerability to CSRF attacks",
        "effort": "MEDIUM",
        "timestamp": "2025-09-19T01:28:03.857Z"
      }
    ],
    "medium": [
      {
        "id": "end-to-end_oauth_verification_-_frontend_1758245274478_xbk8u",
        "phase": "End-to-End OAuth Verification - frontend",
        "test": "Frontend Accessibility",
        "status": "FAIL",
        "severity": "MEDIUM",
        "category": "OAUTH",
        "description": "",
        "recommendation": "",
        "impact": "",
        "effort": "MEDIUM",
        "timestamp": "2025-09-19T01:27:54.478Z"
      },
      {
        "id": "end-to-end_oauth_verification_-_oauth_1758245274478_snh7m",
        "phase": "End-to-End OAuth Verification - oauth",
        "test": "OAuth URL Structure Validation",
        "status": "FAIL",
        "severity": "MEDIUM",
        "category": "OAUTH",
        "description": "OAuth validation or fix verification issues",
        "recommendation": "Review OAuth endpoint validation logic",
        "impact": "May cause user experience issues",
        "effort": "MEDIUM",
        "timestamp": "2025-09-19T01:27:54.478Z"
      },
      {
        "id": "end-to-end_oauth_verification_-_state_1758245274478_56au7",
        "phase": "End-to-End OAuth Verification - state",
        "test": "OAuth State Generation and Storage",
        "status": "FAIL",
        "severity": "MEDIUM",
        "category": "OAUTH",
        "description": "",
        "recommendation": "",
        "impact": "",
        "effort": "MEDIUM",
        "timestamp": "2025-09-19T01:27:54.478Z"
      },
      {
        "id": "end-to-end_oauth_verification_-_state_1758245274478_3cnsr",
        "phase": "End-to-End OAuth Verification - state",
        "test": "State Parameter Validation",
        "status": "FAIL",
        "severity": "MEDIUM",
        "category": "OAUTH",
        "description": "OAuth validation or fix verification issues",
        "recommendation": "Review OAuth endpoint validation logic",
        "impact": "May cause user experience issues",
        "effort": "MEDIUM",
        "timestamp": "2025-09-19T01:27:54.478Z"
      },
      {
        "id": "end-to-end_oauth_verification_-_callback_1758245274478_4jquk",
        "phase": "End-to-End OAuth Verification - callback",
        "test": "Callback Endpoint Availability",
        "status": "FAIL",
        "severity": "MEDIUM",
        "category": "OAUTH",
        "description": "",
        "recommendation": "",
        "impact": "",
        "effort": "MEDIUM",
        "timestamp": "2025-09-19T01:27:54.478Z"
      },
      {
        "id": "end-to-end_oauth_verification_-_callback_1758245274478_sldn2",
        "phase": "End-to-End OAuth Verification - callback",
        "test": "Connection Status Update Capability",
        "status": "FAIL",
        "severity": "MEDIUM",
        "category": "OAUTH",
        "description": "",
        "recommendation": "",
        "impact": "",
        "effort": "MEDIUM",
        "timestamp": "2025-09-19T01:27:54.478Z"
      },
      {
        "id": "error_handling_verification_-_credentials_1758245279140_hh9i4",
        "phase": "Error Handling Verification - credentials",
        "test": "Missing API Secret Validation",
        "status": "FAIL",
        "severity": "MEDIUM",
        "category": "ERROR_HANDLING",
        "description": "",
        "recommendation": "",
        "impact": "",
        "effort": "MEDIUM",
        "timestamp": "2025-09-19T01:27:59.140Z"
      },
      {
        "id": "error_handling_verification_-_oauth_1758245279140_52wrh",
        "phase": "Error Handling Verification - oauth",
        "test": "OAuth Flow Interruption Handling",
        "status": "FAIL",
        "severity": "MEDIUM",
        "category": "ERROR_HANDLING",
        "description": "",
        "recommendation": "",
        "impact": "",
        "effort": "MEDIUM",
        "timestamp": "2025-09-19T01:27:59.140Z"
      },
      {
        "id": "security_verification_-_tokensecurity_1758245283857_v0j3u",
        "phase": "Security Verification - tokenSecurity",
        "test": "OAuth URL Security Parameters",
        "status": "FAIL",
        "severity": "MEDIUM",
        "category": "SECURITY",
        "description": "",
        "recommendation": "",
        "impact": "",
        "effort": "MEDIUM",
        "timestamp": "2025-09-19T01:28:03.857Z"
      }
    ],
    "low": []
  },
  "recommendations": {
    "immediate": [
      {
        "category": "OAUTH",
        "recommendation": "Fix database connection to enable OAuth URL generation",
        "impact": "Users cannot initiate broker connections",
        "effort": "HIGH"
      },
      {
        "category": "OAUTH",
        "recommendation": "Fix database connection to enable OAuth URL generation",
        "impact": "Users cannot initiate broker connections",
        "effort": "HIGH"
      },
      {
        "category": "SECURITY",
        "recommendation": "Implement proper OAuth state parameter validation",
        "impact": "Vulnerability to CSRF attacks",
        "effort": "MEDIUM"
      },
      {
        "category": "SECURITY",
        "recommendation": "Implement proper OAuth state parameter validation",
        "impact": "Vulnerability to CSRF attacks",
        "effort": "MEDIUM"
      }
    ],
    "systemReadiness": "READY"
  }
}